{"version":3,"file":"static/js/1320.48946397.chunk.js","mappings":"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","sources":["../node_modules/uniforms/esm/changedKeys.js","../node_modules/uniforms/esm/randomIds.js","../node_modules/uniforms/esm/BaseForm.js","../node_modules/uniforms/esm/QuickForm.js","../node_modules/uniforms/esm/ValidatedForm.js","../node_modules/uniforms/esm/AutoForm.js","../node_modules/uniforms/esm/ValidatedQuickForm.js","../../../src/ui/AutoformControls/AutoFieldContext.tsx","../../../src/ui/AutoformControls/AutoForm.tsx","../node_modules/lodash/_baseSet.js","../node_modules/lodash/clone.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/setWith.js"],"sourcesContent":["import isEqual from 'lodash/isEqual';\nimport { joinName } from './joinName';\nfunction isObject(value) {\n    return !!value && value === Object(value) && !(value instanceof Date);\n}\n// eslint-disable-next-line complexity\nexport function changedKeys(root, valueA, valueB) {\n    if (!isObject(valueA) || (valueB && typeof valueA !== typeof valueB)) {\n        return isEqual(valueA, valueB) ? [] : [root];\n    }\n    const changed = [root];\n    if (isObject(valueB)) {\n        for (const key in valueA) {\n            if (!(key in valueB) || !isEqual(valueA[key], valueB[key])) {\n                changed.push(joinName(root, key));\n            }\n        }\n        for (const key in valueB) {\n            if (!(key in valueA)) {\n                changed.push(joinName(root, key));\n            }\n        }\n        if (changed.length === 1) {\n            changed.pop();\n        }\n    }\n    else {\n        // eslint-disable-next-line guard-for-in\n        for (const key in valueA) {\n            changed.push(joinName(root, key));\n        }\n    }\n    return changed;\n}\n","// Workaround for SSR\n// https://github.com/vazco/uniforms/issues/40\n// https://github.com/facebook/react/issues/4000\nfunction randomIdsGenerator(prefix) {\n    let counter = 0;\n    return () => `${prefix}-${('000' + (counter++).toString(36)).slice(-4)}`;\n}\nconst randomIdPrefix = randomIdsGenerator('uniforms');\nexport function randomIds(prefix = randomIdPrefix()) {\n    return randomIdsGenerator(prefix);\n}\n","import clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport React, { Component } from 'react';\nimport { changedKeys } from './changedKeys';\nimport { context } from './context';\nimport { randomIds } from './randomIds';\nexport class BaseForm extends Component {\n    constructor(props) {\n        super(props);\n        // @ts-expect-error: State may be bigger, but it'll be covered by the subclasses.\n        this.state = {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: 0,\n            submitted: false,\n            submitting: false,\n        };\n        this.mounted = false;\n        this.randomId = randomIds(this.props.id);\n        this.onReset = this.reset = this.onReset.bind(this);\n        this.onChange = this.change = this.onChange.bind(this);\n        this.onSubmit = this.submit = this.onSubmit.bind(this);\n        // TODO: It shouldn't be here\n        const getModel = this.getModel.bind(this);\n        this.getModel = (mode, model = getModel(mode)) => mode !== undefined && this.props.modelTransform\n            ? this.props.modelTransform(mode, model)\n            : model;\n    }\n    componentDidMount() {\n        this.mounted = true;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentDidUpdate(prevProps, prevState, snapshot) { }\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.delayId) {\n            clearTimeout(this.delayId);\n        }\n        // There are at least 4 places where we'd need to check, whether or not we\n        // actually perform `setState` after the component gets unmounted. Instead,\n        // we override it to hide the React warning. Also because React no longer\n        // will raise it in the newer versions.\n        // https://github.com/facebook/react/pull/22114\n        // https://github.com/vazco/uniforms/issues/1152\n        this.setState = () => { };\n    }\n    getContext() {\n        return {\n            changed: this.state.changed,\n            changedMap: this.state.changedMap,\n            error: this.getContextError(),\n            formRef: this,\n            model: this.getContextModel(),\n            name: this.getContextName(),\n            onChange: this.getContextOnChange(),\n            onSubmit: this.getContextOnSubmit(),\n            randomId: this.randomId,\n            schema: this.getContextSchema(),\n            state: this.getContextState(),\n            submitted: this.state.submitted,\n            submitting: this.state.submitting,\n            validating: false,\n        };\n    }\n    getContextName() {\n        return [];\n    }\n    getContextError() {\n        return this.props.error;\n    }\n    getContextModel() {\n        return this.getModel('form');\n    }\n    getContextState() {\n        return {\n            disabled: !!this.props.disabled,\n            label: !!this.props.label,\n            placeholder: !!this.props.placeholder,\n            readOnly: !!this.props.readOnly,\n            showInlineError: !!this.props.showInlineError,\n        };\n    }\n    getContextSchema() {\n        return this.props.schema;\n    }\n    getContextOnChange() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onChange;\n    }\n    getContextOnSubmit() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onSubmit;\n    }\n    getModel(mode, model = this.props.model) {\n        return model;\n    }\n    getNativeFormProps() {\n        const props = omit(this.props, [\n            'autosave',\n            'autosaveDelay',\n            'disabled',\n            'error',\n            'label',\n            'model',\n            'modelTransform',\n            'onChange',\n            'onSubmit',\n            'placeholder',\n            'readOnly',\n            'schema',\n            'showInlineError',\n        ]);\n        return Object.assign(Object.assign({}, props), { \n            // It's bound in constructor.\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            onSubmit: this.onSubmit, key: `reset-${this.state.resetCount}` });\n    }\n    onChange(key, value) {\n        // Do not set `changed` before componentDidMount\n        if (this.mounted) {\n            const keys = changedKeys(key, value, get(this.getModel(), key));\n            if (keys.length !== 0) {\n                this.setState(state => \n                // If all are already marked, we can skip the update completely.\n                state.changed && keys.every(key => !!get(state.changedMap, key))\n                    ? null\n                    : {\n                        changed: true,\n                        changedMap: keys.reduce((changedMap, key) => setWith(changedMap, key, {}, clone), clone(state.changedMap)),\n                    });\n            }\n        }\n        if (this.props.onChange) {\n            this.props.onChange(key, value);\n        }\n        // Do not call `onSubmit` before componentDidMount\n        if (this.mounted && this.props.autosave) {\n            if (this.delayId) {\n                this.delayId = clearTimeout(this.delayId);\n            }\n            // Delay autosave by `autosaveDelay` milliseconds...\n            this.delayId = setTimeout(() => {\n                // ...and wait for all scheduled `setState`s to commit. This is required\n                // for AutoForm to validate correct model, waiting in `onChange`.\n                this.setState(() => null, () => {\n                    this.onSubmit();\n                });\n            }, this.props.autosaveDelay);\n        }\n    }\n    __reset(state) {\n        return {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: state.resetCount + 1,\n            submitted: false,\n            submitting: false,\n        };\n    }\n    onReset() {\n        // @ts-expect-error\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.setState(this.__reset);\n    }\n    onSubmit(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.setState(state => (state.submitted ? null : { submitted: true }));\n        const result = this.props.onSubmit(this.getModel('submit'));\n        if (!(result instanceof Promise)) {\n            return Promise.resolve();\n        }\n        this.setState({ submitting: true });\n        return result.finally(() => {\n            this.setState({ submitting: false });\n        });\n    }\n    render() {\n        return (React.createElement(context.Provider, { value: this.getContext() },\n            React.createElement(\"form\", Object.assign({}, this.getNativeFormProps()))));\n    }\n}\nBaseForm.displayName = 'Form';\nBaseForm.defaultProps = {\n    autosave: false,\n    autosaveDelay: 0,\n    error: null,\n    label: true,\n    model: Object.create(null),\n    noValidate: true,\n    onSubmit() { },\n};\n","import { __rest } from \"tslib\";\nimport React from 'react';\nimport { BaseForm } from './BaseForm';\nexport function Quick(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class QuickForm extends Base {\n        getNativeFormProps() {\n            const _props = super.getNativeFormProps();\n            const { autoField: AutoField = this.getAutoField(), errorsField: ErrorsField = this.getErrorsField(), submitField: SubmitField = this.getSubmitField() } = _props, props = __rest(_props, [\"autoField\", \"errorsField\", \"submitField\"]);\n            if (!props.children) {\n                props.children = this.getContextSchema()\n                    .getSubfields()\n                    .map(key => React.createElement(AutoField, { key: key, name: key }))\n                    .concat([\n                    React.createElement(ErrorsField, { key: \"$ErrorsField\" }),\n                    React.createElement(SubmitField, { key: \"$SubmitField\" }),\n                ]);\n            }\n            return props;\n        }\n        getAutoField() {\n            return () => null;\n        }\n        getErrorsField() {\n            return () => null;\n        }\n        getSubmitField() {\n            return () => null;\n        }\n    }\n    QuickForm.Quick = Quick;\n    QuickForm.displayName = `Quick${Base.displayName}`;\n    return QuickForm;\n}\nexport const QuickForm = Quick(BaseForm);\n","import clone from 'lodash/clone';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { BaseForm } from './BaseForm';\nexport function Validated(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class ValidatedForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { error: null, validate: false, validating: false, validator: this.getContextSchema().getValidator(props.validator) });\n            this.onValidate = this.validate = this.onValidate.bind(this);\n            this.onValidateModel = this.validateModel =\n                this.onValidateModel.bind(this);\n        }\n        getContextError() {\n            var _a;\n            return (_a = super.getContextError()) !== null && _a !== void 0 ? _a : this.state.error;\n        }\n        getContext() {\n            return Object.assign(Object.assign({}, super.getContext()), { validating: this.state.validating });\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, [\n                'onValidate',\n                'validate',\n                'validator',\n            ]);\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n            const { model, schema, validate, validator } = this.props;\n            if (schema !== prevProps.schema || validator !== prevProps.validator) {\n                this.setState({ validator: schema.getValidator(validator) }, () => {\n                    if (shouldRevalidate(validate, this.state.validate)) {\n                        this.onValidate();\n                    }\n                });\n            }\n            else if (!isEqual(model, prevProps.model) &&\n                shouldRevalidate(validate, this.state.validate)) {\n                this.onValidateModel(model);\n            }\n        }\n        onChange(key, value) {\n            if (shouldRevalidate(this.props.validate, this.state.validate)) {\n                this.onValidate(key, value);\n            }\n            super.onChange(key, value);\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { error: null, validate: false, validating: false });\n        }\n        onSubmit(event) {\n            if (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this.setState({ submitted: true, validate: true });\n            const result = this.onValidate().then(error => {\n                if (error !== null) {\n                    return Promise.reject(error);\n                }\n                // Validation failed (i.e. returned an error), so no error is present\n                // both in the props nor the state.\n                return super.onSubmit().catch(error => {\n                    this.setState({ error });\n                    throw error;\n                });\n            });\n            result.catch(noop);\n            return result;\n        }\n        onValidate(key, value) {\n            let model = this.getContextModel();\n            if (model && key) {\n                model = setWith(clone(model), key, cloneDeep(value), clone);\n            }\n            return this.onValidateModel(model);\n        }\n        onValidateModel(originalModel) {\n            const model = this.getModel('validate', originalModel);\n            // Using `then` allows using the same code for both synchronous and\n            // asynchronous cases. We could use `await` here, but it would make all\n            // calls asynchronous, unnecessary delaying synchronous validation.\n            const then = makeThen(() => {\n                this.setState({ validating: true });\n            });\n            return then(this.state.validator(model), (error = null) => then(this.props.onValidate(model, error), (error = null) => {\n                var _a;\n                // Do not copy the error from props to the state.\n                error = this.props.error === error ? null : error;\n                // If the whole operation was synchronous and resulted in the same\n                // error, we can skip the re-render.\n                this.setState(state => state.error === error && !state.validating\n                    ? null\n                    : { error, validating: false });\n                // A predefined error takes precedence over the validation one.\n                return Promise.resolve((_a = this.props.error) !== null && _a !== void 0 ? _a : error);\n            }));\n        }\n    }\n    ValidatedForm.Validated = Validated;\n    ValidatedForm.displayName = `Validated${Base.displayName}`;\n    ValidatedForm.defaultProps = Object.assign(Object.assign({}, Base.defaultProps), { onValidate(model, error) {\n            return error;\n        }, validate: 'onChangeAfterSubmit' });\n    return ValidatedForm;\n}\nfunction makeThen(callIfAsync) {\n    function then(value, fn) {\n        if (value instanceof Promise) {\n            callIfAsync();\n            return value.then(fn);\n        }\n        return fn(value);\n    }\n    return then;\n}\nfunction shouldRevalidate(inProps, inState) {\n    return (inProps === 'onChange' || (inProps === 'onChangeAfterSubmit' && inState));\n}\nexport const ValidatedForm = Validated(BaseForm);\n","import clone from 'lodash/clone';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { ValidatedQuickForm, } from './ValidatedQuickForm';\nexport function Auto(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class AutoForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { model: props.model });\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            const { model } = this.props;\n            if (!isEqual(model, prevProps.model)) {\n                this.setState({ model });\n            }\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, ['onChangeModel']);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getModel(mode) {\n            return this.state.model;\n        }\n        onChange(key, value) {\n            super.onChange(key, value);\n            this.setState(state => ({ model: setWith(clone(state.model), key, value, clone) }), () => {\n                if (this.props.onChangeModel) {\n                    this.props.onChangeModel(this.state.model);\n                }\n            });\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { model: this.props.model });\n        }\n    }\n    AutoForm.Auto = Auto;\n    AutoForm.displayName = `Auto${Base.displayName}`;\n    return AutoForm;\n}\nexport const AutoForm = Auto(ValidatedQuickForm);\n","import { BaseForm } from './BaseForm';\nimport { Quick } from './QuickForm';\nimport { Validated, } from './ValidatedForm';\nexport const ValidatedQuickForm = Validated(Quick(BaseForm));\n",null,null,"var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseSet = require('./_baseSet');\n\n/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction setWith(object, path, value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseSet(object, path, value, customizer);\n}\n\nmodule.exports = setWith;\n"],"names":["isObject","value","Object","Date","randomIdsGenerator","prefix","counter","concat","toString","slice","randomIdPrefix","BaseForm","Component","constructor","props","_this","super","this","state","changed","changedMap","create","resetCount","submitted","submitting","mounted","randomId","arguments","length","undefined","randomIds","id","onReset","reset","bind","onChange","change","onSubmit","submit","getModel","mode","model","modelTransform","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","delayId","clearTimeout","setState","getContext","error","getContextError","formRef","getContextModel","name","getContextName","getContextOnChange","getContextOnSubmit","schema","getContextSchema","getContextState","validating","disabled","label","placeholder","readOnly","showInlineError","getNativeFormProps","omit","assign","key","keys","root","valueA","valueB","isEqual","push","joinName","pop","changedKeys","get","every","reduce","setWith","clone","autosave","setTimeout","autosaveDelay","__reset","event","preventDefault","stopPropagation","result","Promise","finally","resolve","render","React","context","Provider","displayName","defaultProps","noValidate","Quick","Base","QuickForm","_props","autoField","AutoField","getAutoField","errorsField","ErrorsField","getErrorsField","submitField","SubmitField","getSubmitField","__rest","children","getSubfields","map","Validated","ValidatedForm","validate","validator","getValidator","onValidate","onValidateModel","validateModel","_a","shouldRevalidate","then","reject","catch","noop","cloneDeep","originalModel","callIfAsync","fn","makeThen","inProps","inState","AutoForm","Auto","onChangeModel","componentDetectorContext","uniforms","_b","showIf","call","_customComponent","defaultComponentDetector","forwardRef","ref","AutofieldContextProvider","__assign","assignValue","require","castPath","isIndex","toKey","module","exports","object","path","customizer","index","lastIndex","nested","newValue","objValue","baseClone","baseIsEqual","other","baseSet"],"sourceRoot":""}