{"version":3,"file":"static/js/405.006039a7.chunk.js","mappings":"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","sources":["../../../src/components/DialogVisibleProvider.tsx","../node_modules/direction/index.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_root.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/debounce.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/now.js","../node_modules/lodash/throttle.js","../node_modules/lodash/toNumber.js","../node_modules/compute-scroll-into-view/src/index.ts","../node_modules/scroll-into-view-if-needed/es/index.js","../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/slate-react/src/utils/environment.ts","../node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts","../node_modules/slate-react/src/components/string.tsx","../node_modules/slate-react/src/utils/weak-maps.ts","../node_modules/slate-react/src/components/leaf.tsx","../node_modules/slate-react/src/utils/range-list.ts","../node_modules/slate-react/src/hooks/use-content-key.ts","../node_modules/slate-react/src/components/text.tsx","../node_modules/slate-react/src/components/element.tsx","../node_modules/slate-react/src/hooks/use-slate-static.tsx","../node_modules/slate-react/src/hooks/use-selected.ts","../node_modules/slate-react/src/hooks/use-children.tsx","../node_modules/slate-react/src/utils/hotkeys.ts","../node_modules/slate-react/src/hooks/use-read-only.ts","../node_modules/slate-react/src/hooks/use-slate.tsx","../node_modules/slate-react/src/hooks/use-decorate.ts","../node_modules/slate-react/src/utils/dom.ts","../node_modules/slate-react/src/components/editable.tsx","../node_modules/slate-react/src/components/android/diff-text.ts","../node_modules/slate-react/src/utils/key.ts","../node_modules/slate-react/src/plugin/react-editor.ts","../node_modules/slate-react/src/components/android/android-input-manager.ts","../node_modules/slate-react/src/components/android/mutation-detection.ts","../node_modules/slate-react/src/components/android/use-mutation-observer.ts","../node_modules/slate-react/src/components/android/use-restore-dom.tsx","../node_modules/slate-react/src/components/android/use-android-input-manager.ts","../node_modules/slate-react/src/components/android/use-track-user-input.ts","../node_modules/slate-react/src/components/android/android-editable.tsx","../node_modules/slate-react/src/hooks/use-focused.ts","../node_modules/slate-react/src/hooks/use-slate-selector.tsx","../node_modules/slate-react/src/components/slate.tsx","../node_modules/slate-react/src/utils/lines.ts","../node_modules/slate-react/src/plugin/with-react.ts","../node_modules/slate-react/src/index.ts","../node_modules/slate-react/src/utils/constants.ts","../node_modules/slate-react/node_modules/is-hotkey/lib/index.js"],"sourcesContent":[null,"'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nfunction getParentElement(element: Node): Element | null {\n  const parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = window as unknown as Window & {\n    visualViewport: visualViewport\n  }\n\n  const { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    const scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    const scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll / scaleY,\n          frame.scrollHeight - height / scaleY + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll / scaleX,\n          frame.scrollWidth - width / scaleX + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n","import compute from 'compute-scroll-into-view';\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n      top = _ref.top,\n      left = _ref.left;\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n  if (isOptionsObject(options)) {\n    return options;\n  }\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\nfunction scrollIntoView(target, options) {\n  var isTargetAttached = target.isConnected || target.ownerDocument.documentElement.contains(target);\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(isTargetAttached ? compute(target, options) : []);\n  }\n  if (!isTargetAttached) {\n    return;\n  }\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\nexport default scrollIntoView;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\n\nexport const IS_REACT_VERSION_17_OR_ABOVE =\n  parseInt(React.version.split('.')[0], 10) >= 17\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// qq browser\nexport const IS_QQBROWSER =\n  typeof navigator !== 'undefined' && /.*QQBrowser/.test(navigator.userAgent)\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  !IS_CHROME_LEGACY &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import React, { useRef } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // Render text content immediately if it's the first-time render\n  // Ensure that text content is rendered on server-side rendering\n  if (!ref.current) {\n    return (\n      <span data-slate-string ref={ref}>\n        {getTextContent()}\n      </span>\n    )\n  }\n\n  // the span is intentionally same on every render in virtual DOM, actual rendering happens in the layout effect above\n  return <span data-slate-string ref={ref} />\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\n  const { length = 0, isLineBreak = false } = props\n  return (\n    <span\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\n      data-slate-length={length}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { Ancestor, Editor, Node, RangeRef } from 'slate'\nimport { Key } from './key'\nimport { TextInsertion } from '../components/android/diff-text'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_ON_COMPOSITION_END: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<Editor, RangeRef> = new WeakMap()\n\n/**\n * Weak maps for saving text on composition stage.\n */\n\nexport const EDITOR_ON_COMPOSITION_TEXT: WeakMap<\n  Editor,\n  TextInsertion[]\n> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\nexport const NODE_TO_RESTORE_DOM = new WeakMap<Node, () => void>()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\n","import React, { useRef, useEffect } from 'react'\nimport { Element, Text } from 'slate'\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const placeholderRef = useRef<HTMLSpanElement | null>(null)\n\n  useEffect(() => {\n    const placeholderEl = placeholderRef?.current\n    const editorEl = document.querySelector<HTMLDivElement>(\n      '[data-slate-editor=\"true\"]'\n    )\n\n    if (!placeholderEl || !editorEl) {\n      return\n    }\n\n    editorEl.style.minHeight = `${placeholderEl.clientHeight}px`\n\n    return () => {\n      editorEl.style.minHeight = 'auto'\n    }\n  }, [placeholderRef, leaf])\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n        },\n        contentEditable: false,\n        ref: placeholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isDecoratorRangeListEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n    const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n    if (\n      !Range.equals(range, other) ||\n      range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] ||\n      !shallowCompare(rangeOwnProps, otherOwnProps)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { useEffect, useRef, useState } from 'react'\nimport { Node as SlateNode } from 'slate'\nimport { NODE_TO_RESTORE_DOM } from '../utils/weak-maps'\n\nexport function useContentKey(node: SlateNode) {\n  const contentKeyRef = useRef<number>(0)\n  const updateAnimationFrameRef = useRef<number | null>(null)\n\n  const [, setForceRerenderCounter] = useState(0)\n\n  useEffect(() => {\n    NODE_TO_RESTORE_DOM.set(node, () => {\n      // Update is already queued and node hasn't re-render yet\n      if (updateAnimationFrameRef.current) {\n        return\n      }\n\n      updateAnimationFrameRef.current = requestAnimationFrame(() => {\n        setForceRerenderCounter(state => state + 1)\n        updateAnimationFrameRef.current = null\n      })\n\n      contentKeyRef.current++\n    })\n\n    return () => {\n      NODE_TO_RESTORE_DOM.delete(node)\n    }\n  }, [node])\n\n  // Node was restored => clear scheduled update\n  if (updateAnimationFrameRef.current) {\n    cancelAnimationFrame(updateAnimationFrameRef.current)\n    updateAnimationFrameRef.current = null\n  }\n\n  return contentKeyRef.current\n}\n","import React, { useRef } from 'react'\nimport { Range, Element, Text as SlateText } from 'slate'\n\nimport Leaf from './leaf'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport { useContentKey } from '../hooks/use-content-key'\nimport { IS_ANDROID } from '../utils/environment'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  const contentKey = IS_ANDROID ? useContentKey(text) : undefined\n\n  return (\n    <span data-slate-node=\"text\" ref={ref} key={contentKey}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    isDecoratorRangeListEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import React, { Fragment, useRef } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\nimport { useContentKey } from '../hooks/use-content-key'\nimport { IS_ANDROID } from '../utils/environment'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const ref = useRef<HTMLElement>(null)\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(element, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, element)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(element)\n    }\n  })\n\n  const content = renderElement({ attributes, children, element })\n\n  if (IS_ANDROID) {\n    const contentKey = useContentKey(element)\n    return <Fragment key={contentKey}>{content}</Fragment>\n  }\n\n  return content\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isDecoratorRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React from 'react'\nimport { Editor, Range, Element, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '..'\nimport { useSlateStatic } from './use-slate-static'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\nimport { SelectedContext } from './use-selected'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n\n    const ds = decorations.reduce<Range[]>((acc, dec) => {\n      const intersection = Range.intersection(dec, range)\n      if (intersection) acc.push(intersection)\n      return acc\n    }, [])\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const [editor] = context\n  return editor\n}\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = () => {\n  return !!(\n    window.document.activeElement && window.document.activeElement.shadowRoot\n  )\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (dataTransfer: DataTransfer): DataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData('application/x-slate-fragment', fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n","import React, { useEffect, useRef, useMemo, useCallback, useState } from 'react'\nimport {\n  Editor,\n  Element,\n  NodeEntry,\n  Node,\n  Range,\n  Text,\n  Transforms,\n  Path,\n  RangeRef,\n} from 'slate'\nimport getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport useChildren from '../hooks/use-children'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_IOS,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_QQBROWSER,\n  IS_SAFARI,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n  CAN_USE_DOM,\n} from '../utils/environment'\nimport { ReactEditor } from '..'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n  DOMText,\n} from '../utils/dom'\n\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  IS_FOCUSED,\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_USER_SELECTION,\n  IS_COMPOSING,\n} from '../utils/weak-maps'\nimport { TRIPLE_CLICK } from '../utils/constants'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      hasInsertPrefixInCompositon: false,\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      ReactEditor.isComposing(editor) ||\n      !domSelection ||\n      !ReactEditor.isFocused(editor)\n    ) {\n      return\n    }\n\n    const hasDomSelection = domSelection.type !== 'None'\n\n    // If the DOM selection is properly unset, we're done.\n    if (!selection && !hasDomSelection) {\n      return\n    }\n\n    // verify that the dom selection is in the editor\n    const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n    let hasDomSelectionInEditor = false\n    if (\n      editorElement.contains(domSelection.anchorNode) &&\n      editorElement.contains(domSelection.focusNode)\n    ) {\n      hasDomSelectionInEditor = true\n    }\n\n    // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n    if (hasDomSelection && hasDomSelectionInEditor && selection) {\n      const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: true,\n\n        // domSelection is not necessarily a valid Slate range\n        // (e.g. when clicking on contentEditable:false element)\n        suppressThrow: true,\n      })\n      if (slateRange && Range.equals(slateRange, selection)) {\n        return\n      }\n    }\n\n    // when <Editable/> is being controlled through external value\n    // then its children might just change - DOM responds to it on its own\n    // but Slate's value is not being updated through any operation\n    // and thus it doesn't transform selection on its own\n    if (selection && !ReactEditor.hasRange(editor, selection)) {\n      editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: false,\n      })\n      return\n    }\n\n    // Otherwise the DOM selection is out of sync, so update it.\n    state.isUpdatingSelection = true\n\n    const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n    if (newDomRange) {\n      if (Range.isBackward(selection!)) {\n        domSelection.setBaseAndExtent(\n          newDomRange.endContainer,\n          newDomRange.endOffset,\n          newDomRange.startContainer,\n          newDomRange.startOffset\n        )\n      } else {\n        domSelection.setBaseAndExtent(\n          newDomRange.startContainer,\n          newDomRange.startOffset,\n          newDomRange.endContainer,\n          newDomRange.endOffset\n        )\n      }\n      scrollSelectionIntoView(editor, newDomRange)\n    } else {\n      domSelection.removeAllRanges()\n    }\n\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\n      // to focus the contenteditable element too. (2016/11/16)\n      if (newDomRange && IS_FIREFOX) {\n        const el = ReactEditor.toDOMNode(editor, editor)\n        el.focus()\n      }\n\n      state.isUpdatingSelection = false\n    })\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (\n        !ReactEditor.isComposing(editor) &&\n        !state.isUpdatingSelection &&\n        !state.isDraggingInternally\n      ) {\n        const root = ReactEditor.findDocumentOrShadowRoot(editor)\n        const { activeElement } = root\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = root.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          hasEditableTarget(editor, anchorNode) ||\n          isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          hasEditableTarget(editor, focusNode) ||\n          isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: false,\n          })\n          Transforms.select(editor, range)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        // These two types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (\n          type === 'insertCompositionText' ||\n          type === 'deleteCompositionText'\n        ) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          if (anchorNode && ReactEditor.hasDOMNode(editor, anchorNode)) {\n            const { document } = ReactEditor.getWindow(editor)\n\n            // Find the last text node inside the anchor.\n            const lastText = document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                editor.selection && Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            const { selection } = editor\n            if (selection) {\n              if (Range.isExpanded(selection)) {\n                Editor.deleteFragment(editor)\n              }\n            }\n\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = [...Node.nodes(editor)].flatMap(([n, p]) =>\n    decorate([n, p])\n  )\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n          // have to use hacks to make these replacement-based features work.\n          // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n          // mismatch warning app moves to browser. Pass-through consumer props when\n          // not CAN_USE_DOM (SSR) and default to falsy value\n          spellCheck={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.spellCheck\n              : false\n          }\n          autoCorrect={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.autoCorrect\n              : 'false'\n          }\n          autoCapitalize={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.autoCapitalize\n              : 'false'\n          }\n          data-slate-editor\n          data-slate-node=\"value\"\n          // explicitly set this\n          contentEditable={!readOnly}\n          // in some cases, a decoration needs access to the range / selection to decorate a text node,\n          // then you will select the whole text node when you select part the of text\n          // this magic zIndex=\"-1\" will fix it\n          zindex={-1}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onBeforeInput={useCallback(\n            (event: React.FormEvent<HTMLDivElement>) => {\n              // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n              // fall back to React's leaky polyfill instead just for it. It\n              // only works for the `insertText` input type.\n              if (\n                !HAS_BEFORE_INPUT_SUPPORT &&\n                !readOnly &&\n                !isEventHandled(event, attributes.onBeforeInput) &&\n                hasEditableTarget(editor, event.target)\n              ) {\n                event.preventDefault()\n                if (!ReactEditor.isComposing(editor)) {\n                  const text = (event as any).data as string\n                  Editor.insertText(editor, text)\n                }\n              }\n            },\n            [readOnly]\n          )}\n          onInput={useCallback((event: React.SyntheticEvent) => {\n            // Flush native operations, as native events will have propogated\n            // and we can correctly compare DOM text values in components\n            // to stop rendering, so that browser functions like autocorrect\n            // and spellcheck work as expected.\n            for (const op of deferredOperations.current) {\n              op()\n            }\n            deferredOperations.current = []\n          }, [])}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              // COMPAT: Safari doesn't always remove the selection even if the content-\n              // editable element no longer has focus. Refer to:\n              // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n              if (IS_SAFARI) {\n                const domSelection = root.getSelection()\n                domSelection?.removeAllRanges()\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onClick={useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onClick) &&\n                isDOMNode(event.target)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n\n                // At this time, the Slate document may be arbitrarily different,\n                // because onClick handlers can change the document before we get here.\n                // Therefore we must check that this path actually exists,\n                // and that it still refers to the same node.\n                if (\n                  !Editor.hasPath(editor, path) ||\n                  Node.get(editor, path) !== node\n                ) {\n                  return\n                }\n\n                if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                  let blockPath = path\n                  if (!Editor.isBlock(editor, node)) {\n                    const block = Editor.above(editor, {\n                      match: n => Editor.isBlock(editor, n),\n                      at: path,\n                    })\n\n                    blockPath = block?.[1] ?? path.slice(0, 1)\n                  }\n\n                  const range = Editor.range(editor, blockPath)\n                  Transforms.select(editor, range)\n                  return\n                }\n\n                if (readOnly) {\n                  return\n                }\n\n                const start = Editor.start(editor, path)\n                const end = Editor.end(editor, path)\n                const startVoid = Editor.void(editor, { at: start })\n                const endVoid = Editor.void(editor, { at: end })\n\n                if (\n                  startVoid &&\n                  endVoid &&\n                  Path.equals(startVoid[1], endVoid[1])\n                ) {\n                  const range = Editor.range(editor, start)\n                  Transforms.select(editor, range)\n                }\n              }\n            },\n            [readOnly, attributes.onClick]\n          )}\n          onCompositionEnd={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionEnd)\n              ) {\n                if (ReactEditor.isComposing(editor)) {\n                  setIsComposing(false)\n                  IS_COMPOSING.set(editor, false)\n                }\n\n                // COMPAT: In Chrome, `beforeinput` events for compositions\n                // aren't correct and never fire the \"insertFromComposition\"\n                // type that we need. So instead, insert whenever a composition\n                // ends since it will already have been committed to the DOM.\n                if (\n                  !IS_SAFARI &&\n                  !IS_FIREFOX_LEGACY &&\n                  !IS_IOS &&\n                  !IS_QQBROWSER &&\n                  !IS_WECHATBROWSER &&\n                  !IS_UC_MOBILE &&\n                  event.data\n                ) {\n                  Editor.insertText(editor, event.data)\n                }\n\n                if (editor.selection && Range.isCollapsed(editor.selection)) {\n                  const leafPath = editor.selection.anchor.path\n                  const currentTextNode = Node.leaf(editor, leafPath)\n                  if (state.hasInsertPrefixInCompositon) {\n                    state.hasInsertPrefixInCompositon = false\n                    Editor.withoutNormalizing(editor, () => {\n                      // remove Unicode BOM prefix added in `onCompositionStart`\n                      const text = currentTextNode.text.replace(/^\\uFEFF/, '')\n                      Transforms.delete(editor, {\n                        distance: currentTextNode.text.length,\n                        reverse: true,\n                      })\n                      Editor.insertText(editor, text)\n                    })\n                  }\n                }\n              }\n            },\n            [attributes.onCompositionEnd]\n          )}\n          onCompositionUpdate={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionUpdate)\n              ) {\n                if (!ReactEditor.isComposing(editor)) {\n                  setIsComposing(true)\n                  IS_COMPOSING.set(editor, true)\n                }\n              }\n            },\n            [attributes.onCompositionUpdate]\n          )}\n          onCompositionStart={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionStart)\n              ) {\n                const { selection, marks } = editor\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                    return\n                  }\n                  const inline = Editor.above(editor, {\n                    match: n => Editor.isInline(editor, n),\n                    mode: 'highest',\n                  })\n                  if (inline) {\n                    const [, inlinePath] = inline\n                    if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                      const point = Editor.after(editor, inlinePath)!\n                      Transforms.setSelection(editor, {\n                        anchor: point,\n                        focus: point,\n                      })\n                    }\n                  }\n                  // insert new node in advance to ensure composition text will insert\n                  // along with final input text\n                  // add Unicode BOM prefix to avoid normalize removing this node\n                  if (marks) {\n                    state.hasInsertPrefixInCompositon = true\n                    Transforms.insertNodes(\n                      editor,\n                      {\n                        text: '\\uFEFF',\n                        ...marks,\n                      },\n                      {\n                        select: true,\n                      }\n                    )\n                  }\n                }\n              }\n            },\n            [attributes.onCompositionStart]\n          )}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'copy')\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'cut')\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onDragOver={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragOver)\n              ) {\n                // Only when the target is void, call `preventDefault` to signal\n                // that drops are allowed. Editable content is droppable by\n                // default, and calling `preventDefault` hides the cursor.\n                const node = ReactEditor.toSlateNode(editor, event.target)\n\n                if (Editor.isVoid(editor, node)) {\n                  event.preventDefault()\n                }\n              }\n            },\n            [attributes.onDragOver]\n          )}\n          onDragStart={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragStart)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n                const voidMatch =\n                  Editor.isVoid(editor, node) ||\n                  Editor.void(editor, { at: path, voids: true })\n\n                // If starting a drag on a void node, make sure it is selected\n                // so that it shows up in the selection's fragment.\n                if (voidMatch) {\n                  const range = Editor.range(editor, path)\n                  Transforms.select(editor, range)\n                }\n\n                state.isDraggingInternally = true\n\n                ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag')\n              }\n            },\n            [readOnly, attributes.onDragStart]\n          )}\n          onDrop={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDrop)\n              ) {\n                event.preventDefault()\n\n                // Keep a reference to the dragged range before updating selection\n                const draggedRange = editor.selection\n\n                // Find the range where the drop happened\n                const range = ReactEditor.findEventRange(editor, event)\n                const data = event.dataTransfer\n\n                Transforms.select(editor, range)\n\n                if (state.isDraggingInternally) {\n                  if (\n                    draggedRange &&\n                    !Range.equals(draggedRange, range) &&\n                    !Editor.void(editor, { at: range, voids: true })\n                  ) {\n                    Transforms.delete(editor, {\n                      at: draggedRange,\n                    })\n                  }\n                }\n\n                ReactEditor.insertData(editor, data)\n\n                // When dragging from another source into the editor, it's possible\n                // that the current editor does not have focus.\n                if (!ReactEditor.isFocused(editor)) {\n                  ReactEditor.focus(editor)\n                }\n              }\n\n              state.isDraggingInternally = false\n            },\n            [readOnly, attributes.onDrop]\n          )}\n          onDragEnd={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                state.isDraggingInternally &&\n                attributes.onDragEnd &&\n                hasTarget(editor, event.target)\n              ) {\n                attributes.onDragEnd(event)\n              }\n\n              // When dropping on a different droppable element than the current editor,\n              // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n              // Note: `onDragEnd` is only called when `onDrop` is not called\n              state.isDraggingInternally = false\n            },\n            [readOnly, attributes.onDragEnd]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const el = ReactEditor.toDOMNode(editor, editor)\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                // COMPAT: If the editor has nested editable elements, the focus\n                // can go to them. In Firefox, this must be prevented because it\n                // results in issues with keyboard navigation. (2017/03/30)\n                if (IS_FIREFOX && event.target !== el) {\n                  el.focus()\n                  return\n                }\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onKeyDown={useCallback(\n            (event: React.KeyboardEvent<HTMLDivElement>) => {\n              if (!readOnly && hasEditableTarget(editor, event.target)) {\n                const { nativeEvent } = event\n\n                // COMPAT: The composition end event isn't fired reliably in all browsers,\n                // so we sometimes might end up stuck in a composition state even though we\n                // aren't composing any more.\n                if (\n                  ReactEditor.isComposing(editor) &&\n                  nativeEvent.isComposing === false\n                ) {\n                  IS_COMPOSING.set(editor, false)\n                  setIsComposing(false)\n                }\n\n                if (\n                  isEventHandled(event, attributes.onKeyDown) ||\n                  ReactEditor.isComposing(editor)\n                ) {\n                  return\n                }\n\n                const { selection } = editor\n                const element =\n                  editor.children[\n                    selection !== null ? selection.focus.path[0] : 0\n                  ]\n                const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                // COMPAT: Since we prevent the default behavior on\n                // `beforeinput` events, the browser doesn't think there's ever\n                // any history stack to undo or redo, so we have to manage these\n                // hotkeys ourselves. (2019/11/06)\n                if (Hotkeys.isRedo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.redo === 'function') {\n                    maybeHistoryEditor.redo()\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isUndo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.undo === 'function') {\n                    maybeHistoryEditor.undo()\n                  }\n\n                  return\n                }\n\n                // COMPAT: Certain browsers don't handle the selection updates\n                // properly. In Chrome, the selection isn't properly extended.\n                // And in Firefox, the selection isn't properly collapsed.\n                // (2017/10/17)\n                if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', reverse: true })\n                  return\n                }\n\n                if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line' })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, {\n                    unit: 'line',\n                    edge: 'focus',\n                    reverse: true,\n                  })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                  return\n                }\n\n                // COMPAT: If a void node is selected, or a zero-width text node\n                // adjacent to an inline is selected, we need to handle these\n                // hotkeys manually because browsers won't be able to skip over\n                // the void node with the zero-width space not being an empty\n                // string.\n                if (Hotkeys.isMoveBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: !isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'start' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'end' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                  return\n                }\n\n                if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                  return\n                }\n\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to guessing at the input intention for hotkeys.\n                // COMPAT: In iOS, some of these hotkeys are handled in the\n                if (!HAS_BEFORE_INPUT_SUPPORT) {\n                  // We don't have a core behavior for these, but they change the\n                  // DOM if we don't prevent them, so we have to.\n                  if (\n                    Hotkeys.isBold(nativeEvent) ||\n                    Hotkeys.isItalic(nativeEvent) ||\n                    Hotkeys.isTransposeCharacter(nativeEvent)\n                  ) {\n                    event.preventDefault()\n                    return\n                  }\n\n                  if (Hotkeys.isSoftBreak(nativeEvent)) {\n                    event.preventDefault()\n                    Editor.insertSoftBreak(editor)\n                    return\n                  }\n\n                  if (Hotkeys.isSplitBlock(nativeEvent)) {\n                    event.preventDefault()\n                    Editor.insertBreak(editor)\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n                } else {\n                  if (IS_CHROME || IS_SAFARI) {\n                    // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                    // an event when deleting backwards in a selected void inline node\n                    if (\n                      selection &&\n                      (Hotkeys.isDeleteBackward(nativeEvent) ||\n                        Hotkeys.isDeleteForward(nativeEvent)) &&\n                      Range.isCollapsed(selection)\n                    ) {\n                      const currentNode = Node.parent(\n                        editor,\n                        selection.anchor.path\n                      )\n\n                      if (\n                        Element.isElement(currentNode) &&\n                        Editor.isVoid(editor, currentNode) &&\n                        Editor.isInline(editor, currentNode)\n                      ) {\n                        event.preventDefault()\n                        Editor.deleteBackward(editor, { unit: 'block' })\n\n                        return\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onKeyDown]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste)\n              ) {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's `onPaste` here instead.\n                // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT ||\n                  isPlainTextOnlyPaste(event.nativeEvent)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.insertData(editor, event.clipboardData)\n                }\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          <Children\n            decorations={decorations}\n            node={editor}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={editor.selection}\n          />\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefObject<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => <span {...attributes}>{children}</span>\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    !editor.selection ||\n    (editor.selection && Range.isCollapsed(editor.selection))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nexport const hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nexport const hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if the target is inside void and in an non-readonly editor.\n */\n\nexport const isTargetInsideNonReadonlyVoid = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): boolean => {\n  if (IS_READ_ONLY.get(editor)) return false\n\n  const slateNode =\n    hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target)\n  return Editor.isVoid(editor, slateNode)\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","import { Editor, Path, Range, Text } from 'slate'\n\nimport { ReactEditor } from '../../'\nimport { DOMNode } from '../../utils/dom'\n\nexport type Diff = {\n  start: number\n  end: number\n  insertText: string\n  removeText: string\n}\n\nexport interface TextInsertion {\n  text: Diff\n  path: Path\n}\n\ntype TextRange = {\n  start: number\n  end: number\n}\n\n/**\n * Returns the number of characters that are the same at the beginning of the\n * String.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the offset of the start of the difference; null if there is no difference\n */\nfunction getDiffStart(prev: string, next: string): number | null {\n  const length = Math.min(prev.length, next.length)\n\n  for (let i = 0; i < length; i++) {\n    if (prev.charAt(i) !== next.charAt(i)) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Returns the number of characters that are the same at the end of the String\n * up to `max`. Max prevents double-counting characters when there are\n * multiple duplicate characters around the diff area.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @param max  the max length to test.\n * @returns number of characters that are the same at the end of the string\n */\nfunction getDiffEnd(prev: string, next: string, max: number): number | null {\n  const prevLength = prev.length\n  const nextLength = next.length\n  const length = Math.min(prevLength, nextLength, max)\n\n  for (let i = 0; i < length; i++) {\n    const prevChar = prev.charAt(prevLength - i - 1)\n    const nextChar = next.charAt(nextLength - i - 1)\n    if (prevChar !== nextChar) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Takes two strings and returns an object representing two offsets. The\n * first, `start` represents the number of characters that are the same at\n * the front of the String. The `end` represents the number of characters\n * that are the same at the end of the String.\n *\n * Returns null if they are identical.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the difference text range; null if there are no differences.\n */\nfunction getDiffOffsets(prev: string, next: string): TextRange | null {\n  if (prev === next) return null\n  const start = getDiffStart(prev, next)\n  if (start === null) return null\n  const maxEnd = Math.min(prev.length - start, next.length - start)\n  const end = getDiffEnd(prev, next, maxEnd)!\n  if (end === null) return null\n  return { start, end }\n}\n\n/**\n * Takes a text string and returns a slice from the string at the given text range\n *\n * @param text  the text\n * @param offsets  the text range\n * @returns the text slice at text range\n */\nfunction sliceText(text: string, offsets: TextRange): string {\n  return text.slice(offsets.start, text.length - offsets.end)\n}\n\n/**\n * Takes two strings and returns a smart diff that can be used to describe the\n * change in a way that can be used as operations like inserting, removing or\n * replacing text.\n *\n * @param prev the previous text\n * @param next the next text\n * @returns the text difference\n */\nexport function diffText(prev?: string, next?: string): Diff | null {\n  if (prev === undefined || next === undefined) return null\n  const offsets = getDiffOffsets(prev, next)\n  if (offsets == null) return null\n  const insertText = sliceText(next, offsets)\n  const removeText = sliceText(prev, offsets)\n  return {\n    start: offsets.start,\n    end: prev.length - offsets.end,\n    insertText,\n    removeText,\n  }\n}\n\nexport function combineInsertedText(insertedText: TextInsertion[]): string {\n  return insertedText.reduce((acc, { text }) => `${acc}${text.insertText}`, '')\n}\n\nexport function getTextInsertion<T extends Editor>(\n  editor: T,\n  domNode: DOMNode\n): TextInsertion | undefined {\n  const node = ReactEditor.toSlateNode(editor, domNode)\n\n  if (!Text.isText(node)) {\n    return undefined\n  }\n\n  const prevText = node.text\n  let nextText = domNode.textContent!\n\n  // textContent will pad an extra \\n when the textContent ends with an \\n\n  if (nextText.endsWith('\\n')) {\n    nextText = nextText.slice(0, nextText.length - 1)\n  }\n\n  // If the text is no different, there is no diff.\n  if (nextText !== prevText) {\n    const textDiff = diffText(prevText, nextText)\n    if (textDiff !== null) {\n      const textPath = ReactEditor.findPath(editor, node)\n\n      return {\n        text: textDiff,\n        path: textPath,\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function normalizeTextInsertionRange(\n  editor: Editor,\n  range: Range | null,\n  { path, text }: TextInsertion\n) {\n  const insertionRange = {\n    anchor: { path, offset: text.start },\n    focus: { path, offset: text.end },\n  }\n\n  if (!range || !Range.isCollapsed(range)) {\n    return insertionRange\n  }\n\n  const { insertText, removeText } = text\n  const isSingleCharacterInsertion =\n    insertText.length === 1 || removeText.length === 1\n\n  /**\n   * This code handles edge cases that arise from text diffing when the\n   * inserted or removed character is a single character, and the character\n   * right before or after the anchor is the same as the one being inserted or\n   * removed.\n   *\n   * Take this example: hello|o\n   *\n   * If another `o` is inserted at the selection's anchor in the example above,\n   * it should be inserted at the anchor, but using text diffing, we actually\n   * detect that the character was inserted after the second `o`:\n   *\n   * helloo[o]|\n   *\n   * Instead, in these very specific edge cases, we assume that the character\n   * needs to be inserted after the anchor rather than where the diff was found:\n   *\n   * hello[o]|o\n   */\n  if (isSingleCharacterInsertion && Path.equals(range.anchor.path, path)) {\n    const [text] = Array.from(\n      Editor.nodes(editor, { at: range, match: Text.isText })\n    )\n\n    if (text) {\n      const [node] = text\n      const { anchor } = range\n      const characterBeforeAnchor = node.text[anchor.offset - 1]\n      const characterAfterAnchor = node.text[anchor.offset]\n\n      if (insertText.length === 1 && insertText === characterAfterAnchor) {\n        // Assume text should be inserted at the anchor\n        return range\n      }\n\n      if (removeText.length === 1 && removeText === characterBeforeAnchor) {\n        // Assume text should be removed right before the anchor\n        return {\n          anchor: { path, offset: anchor.offset - 1 },\n          focus: { path, offset: anchor.offset },\n        }\n      }\n    }\n  }\n\n  return insertionRange\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Editor, Node, Path, Point, Range, Transforms, BaseEditor } from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  IS_COMPOSING,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  normalizeDOMPoint,\n  hasShadowRoot,\n} from '../utils/dom'\nimport { IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n}\n\nexport const ReactEditor = {\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n\n  isComposing(editor: ReactEditor): boolean {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n\n  insertFragmentData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertFragmentData(data)\n  },\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n\n  insertTextData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertTextData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ): void {\n    editor.setFragmentData(data, originEvent)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (const text of texts) {\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      { exactMatch, suppressThrow }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n}\n","import { ReactEditor } from '../../plugin/react-editor'\nimport { Editor, Range, Transforms, Text } from 'slate'\nimport {\n  IS_ON_COMPOSITION_END,\n  EDITOR_ON_COMPOSITION_TEXT,\n} from '../../utils/weak-maps'\n\nimport { DOMNode } from '../../utils/dom'\n\nimport {\n  normalizeTextInsertionRange,\n  combineInsertedText,\n  TextInsertion,\n} from './diff-text'\nimport {\n  gatherMutationData,\n  isDeletion,\n  isLineBreak,\n  isRemoveLeafNodes,\n  isReplaceExpandedSelection,\n  isTextInsertion,\n} from './mutation-detection'\n\n// Replace with `const debug = console.log` to debug\nconst debug = (...message: any[]) => {}\n\n/**\n * Based loosely on:\n *\n * https://github.com/facebook/draft-js/blob/master/src/component/handlers/composition/DOMObserver.js\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\n *\n * The input manager attempts to map observed mutations on the document to a\n * set of operations in order to reconcile Slate's internal value with the DOM.\n *\n * Mutations are processed synchronously as they come in. Only mutations that occur\n * during a user input loop are processed, as other mutations can occur within the\n * document that were not initiated by user input.\n *\n * The mutation reconciliation process attempts to match mutations to the following\n * patterns:\n *\n * - Text updates\n * - Deletions\n * - Line breaks\n *\n * @param editor\n * @param restoreDOM\n */\n\nexport class AndroidInputManager {\n  constructor(private editor: ReactEditor, private restoreDOM: () => void) {\n    this.editor = editor\n    this.restoreDOM = restoreDOM\n  }\n\n  /**\n   * Handle MutationObserver flush\n   *\n   * @param mutations\n   */\n\n  flush = (mutations: MutationRecord[]) => {\n    debug('flush')\n\n    try {\n      this.reconcileMutations(mutations)\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err)\n\n      // Failed to reconcile mutations, restore DOM to its previous state\n      this.restoreDOM()\n    }\n  }\n\n  /**\n   * Reconcile a batch of mutations\n   *\n   * @param mutations\n   */\n\n  private reconcileMutations = (mutations: MutationRecord[]) => {\n    const mutationData = gatherMutationData(this.editor, mutations)\n    const { insertedText, removedNodes } = mutationData\n\n    debug('processMutations', mutations, mutationData)\n\n    if (isReplaceExpandedSelection(this.editor, mutationData)) {\n      const text = combineInsertedText(insertedText)\n      this.replaceExpandedSelection(text)\n    } else if (isLineBreak(this.editor, mutationData)) {\n      this.insertBreak()\n    } else if (isRemoveLeafNodes(this.editor, mutationData)) {\n      this.removeLeafNodes(removedNodes)\n    } else if (isDeletion(this.editor, mutationData)) {\n      this.deleteBackward()\n    } else if (isTextInsertion(this.editor, mutationData)) {\n      this.insertText(insertedText)\n    }\n  }\n\n  /**\n   * Apply text diff\n   */\n\n  private insertText = (insertedText: TextInsertion[]) => {\n    debug('insertText')\n\n    const { selection } = this.editor\n\n    // If it is in composing or after `onCompositionend`, set `EDITOR_ON_COMPOSITION_TEXT` and return.\n    // Text will be inserted on compositionend event.\n    if (\n      ReactEditor.isComposing(this.editor) ||\n      IS_ON_COMPOSITION_END.get(this.editor)\n    ) {\n      EDITOR_ON_COMPOSITION_TEXT.set(this.editor, insertedText)\n      IS_ON_COMPOSITION_END.set(this.editor, false)\n      return\n    }\n\n    // Insert the batched text diffs\n    insertedText.forEach(insertion => {\n      const text = insertion.text.insertText\n      const at = normalizeTextInsertionRange(this.editor, selection, insertion)\n      Transforms.setSelection(this.editor, at)\n      Editor.insertText(this.editor, text)\n    })\n  }\n\n  /**\n   * Handle line breaks\n   */\n\n  private insertBreak = () => {\n    debug('insertBreak')\n\n    const { selection } = this.editor\n\n    Editor.insertBreak(this.editor)\n\n    this.restoreDOM()\n\n    if (selection) {\n      // Compat: Move selection to the newly inserted block if it has not moved\n      setTimeout(() => {\n        if (\n          this.editor.selection &&\n          Range.equals(selection, this.editor.selection)\n        ) {\n          Transforms.move(this.editor)\n        }\n      }, 100)\n    }\n  }\n\n  /**\n   * Handle expanded selection being deleted or replaced by text\n   */\n\n  private replaceExpandedSelection = (text: string) => {\n    debug('replaceExpandedSelection')\n\n    // Delete expanded selection\n    Editor.deleteFragment(this.editor)\n\n    if (text.length) {\n      // Selection was replaced by text, insert the entire text diff\n      Editor.insertText(this.editor, text)\n    }\n\n    this.restoreDOM()\n  }\n\n  /**\n   * Handle `backspace` that merges blocks\n   */\n\n  private deleteBackward = () => {\n    debug('deleteBackward')\n\n    Editor.deleteBackward(this.editor)\n    ReactEditor.focus(this.editor)\n\n    this.restoreDOM()\n  }\n\n  /**\n   * Handle mutations that remove specific leaves\n   */\n  private removeLeafNodes = (nodes: DOMNode[]) => {\n    for (const node of nodes) {\n      const slateNode = ReactEditor.toSlateNode(this.editor, node)\n\n      if (slateNode) {\n        const path = ReactEditor.findPath(this.editor, slateNode)\n\n        Transforms.delete(this.editor, { at: path })\n        this.restoreDOM()\n      }\n    }\n  }\n}\n\nexport default AndroidInputManager\n","import { Editor, Node, Path, Range } from 'slate'\n\nimport { DOMNode } from '../../utils/dom'\nimport { ReactEditor } from '../..'\nimport { TextInsertion, getTextInsertion } from './diff-text'\n\ninterface MutationData {\n  addedNodes: DOMNode[]\n  removedNodes: DOMNode[]\n  insertedText: TextInsertion[]\n  characterDataMutations: MutationRecord[]\n}\n\ntype MutationDetection = (editor: Editor, mutationData: MutationData) => boolean\n\nexport function gatherMutationData(\n  editor: Editor,\n  mutations: MutationRecord[]\n): MutationData {\n  const addedNodes: DOMNode[] = []\n  const removedNodes: DOMNode[] = []\n  const insertedText: TextInsertion[] = []\n  const characterDataMutations: MutationRecord[] = []\n\n  mutations.forEach(mutation => {\n    switch (mutation.type) {\n      case 'childList': {\n        if (mutation.addedNodes.length) {\n          mutation.addedNodes.forEach(addedNode => {\n            addedNodes.push(addedNode)\n          })\n        }\n\n        mutation.removedNodes.forEach(removedNode => {\n          removedNodes.push(removedNode)\n        })\n\n        break\n      }\n      case 'characterData': {\n        characterDataMutations.push(mutation)\n\n        // Changes to text nodes should consider the parent element\n        const { parentNode } = mutation.target\n\n        if (!parentNode) {\n          return\n        }\n\n        const textInsertion = getTextInsertion(editor, parentNode)\n\n        if (!textInsertion) {\n          return\n        }\n\n        // If we've already detected a diff at that path, we can return early\n        if (\n          insertedText.some(({ path }) => Path.equals(path, textInsertion.path))\n        ) {\n          return\n        }\n\n        // Add the text diff to the array of detected text insertions that need to be reconciled\n        insertedText.push(textInsertion)\n      }\n    }\n  })\n\n  return { addedNodes, removedNodes, insertedText, characterDataMutations }\n}\n\n/**\n * In general, when a line break occurs, there will be more `addedNodes` than `removedNodes`.\n *\n * This isn't always the case however. In some cases, there will be more `removedNodes` than\n * `addedNodes`.\n *\n * To account for these edge cases, the most reliable strategy to detect line break mutations\n * is to check whether a new block was inserted of the same type as the current block.\n */\nexport const isLineBreak: MutationDetection = (editor, { addedNodes }) => {\n  const { selection } = editor\n  const parentNode = selection\n    ? Node.parent(editor, selection.anchor.path)\n    : null\n  const parentDOMNode = parentNode\n    ? ReactEditor.toDOMNode(editor, parentNode)\n    : null\n\n  if (!parentDOMNode) {\n    return false\n  }\n\n  return addedNodes.some(\n    addedNode =>\n      addedNode instanceof HTMLElement &&\n      addedNode.tagName === parentDOMNode?.tagName\n  )\n}\n\n/**\n * So long as we check for line break mutations before deletion mutations,\n * we can safely assume that a set of mutations was a deletion if there are\n * removed nodes.\n */\nexport const isDeletion: MutationDetection = (_, { removedNodes }) => {\n  return removedNodes.length > 0\n}\n\n/**\n * If the selection was expanded and there are removed nodes,\n * the contents of the selection need to be replaced with the diff\n */\nexport const isReplaceExpandedSelection: MutationDetection = (\n  { selection },\n  { removedNodes }\n) => {\n  return selection\n    ? Range.isExpanded(selection) && removedNodes.length > 0\n    : false\n}\n\n/**\n * Plain text insertion\n */\nexport const isTextInsertion: MutationDetection = (_, { insertedText }) => {\n  return insertedText.length > 0\n}\n\n/**\n * Edge case. Detect mutations that remove leaf nodes and also update character data\n */\nexport const isRemoveLeafNodes: MutationDetection = (\n  _,\n  { addedNodes, characterDataMutations, removedNodes }\n) => {\n  return (\n    removedNodes.length > 0 &&\n    addedNodes.length === 0 &&\n    characterDataMutations.length > 0\n  )\n}\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Disconnect mutation observer during render phase\n    mutationObserver.disconnect()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    // Attach mutation observer after render phase has finished\n    mutationObserver.observe(node.current, options)\n\n    // Clean up after effect\n    return mutationObserver.disconnect.bind(mutationObserver)\n  })\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { Node as SlateNode, Path } from 'slate'\nimport { ReactEditor, useSlateStatic } from '../..'\nimport { DOMNode, isDOMElement } from '../../utils/dom'\nimport { ELEMENT_TO_NODE, NODE_TO_RESTORE_DOM } from '../../utils/weak-maps'\nimport { useMutationObserver } from './use-mutation-observer'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n}\n\nfunction findClosestKnowSlateNode(domNode: DOMNode): SlateNode | null {\n  let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n  if (domEl && !domEl.hasAttribute('data-slate-node')) {\n    domEl = domEl.closest(`[data-slate-node]`)\n  }\n\n  const slateNode = domEl && ELEMENT_TO_NODE.get(domEl as HTMLElement)\n  if (slateNode) {\n    return slateNode\n  }\n\n  // Unknown dom element with a slate-slate-node attribute => the IME\n  // most likely duplicated the node so we have to restore the parent\n  return domEl?.parentElement\n    ? findClosestKnowSlateNode(domEl.parentElement)\n    : null\n}\n\nexport function useRestoreDom(\n  node: React.RefObject<HTMLElement>,\n  receivedUserInput: React.RefObject<boolean>\n) {\n  const editor = useSlateStatic()\n  const mutatedNodes = useRef<Set<SlateNode>>(new Set())\n\n  const handleDOMMutation = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    mutations.forEach(({ target }) => {\n      const slateNode = findClosestKnowSlateNode(target)\n      if (!slateNode) {\n        return\n      }\n\n      return mutatedNodes.current.add(slateNode)\n    })\n  }, [])\n\n  useMutationObserver(node, handleDOMMutation, MUTATION_OBSERVER_CONFIG)\n\n  // Clear mutated nodes on every render\n  mutatedNodes.current.clear()\n  const restore = useCallback(() => {\n    const mutated = Array.from(mutatedNodes.current.values())\n\n    // Filter out child nodes of nodes that will be restored anyway\n    const nodesToRestore = mutated.filter(\n      n =>\n        !mutated.some(m =>\n          Path.isParent(\n            ReactEditor.findPath(editor, m),\n            ReactEditor.findPath(editor, n)\n          )\n        )\n    )\n\n    nodesToRestore.forEach(n => {\n      NODE_TO_RESTORE_DOM.get(n)?.()\n    })\n\n    mutatedNodes.current.clear()\n  }, [])\n\n  return restore\n}\n","import { RefObject, useCallback, useMemo, useRef, useState } from 'react'\n\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nimport { AndroidInputManager } from './android-input-manager'\nimport { useRestoreDom } from './use-restore-dom'\nimport { useMutationObserver } from './use-mutation-observer'\nimport { useTrackUserInput } from './use-track-user-input'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport function useAndroidInputManager(node: RefObject<HTMLElement>) {\n  const editor = useSlateStatic()\n\n  const { receivedUserInput, onUserInput } = useTrackUserInput()\n  const restoreDom = useRestoreDom(node, receivedUserInput)\n\n  const inputManager = useMemo(\n    () => new AndroidInputManager(editor, restoreDom),\n    [restoreDom, editor]\n  )\n\n  const timeoutId = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const isReconciling = useRef(false)\n  const flush = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    isReconciling.current = true\n    inputManager.flush(mutations)\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current)\n    }\n\n    timeoutId.current = setTimeout(() => {\n      isReconciling.current = false\n      timeoutId.current = null\n    }, 250)\n  }, [])\n\n  useMutationObserver(node, flush, MUTATION_OBSERVER_CONFIG)\n\n  return {\n    isReconciling,\n    onUserInput,\n  }\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nimport { ReactEditor } from '../..'\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameRef = useRef<number | null>(null)\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current === false) {\n      const window = ReactEditor.getWindow(editor)\n\n      receivedUserInput.current = true\n\n      if (animationFrameRef.current) {\n        window.cancelAnimationFrame(animationFrameRef.current)\n      }\n\n      animationFrameRef.current = window.requestAnimationFrame(() => {\n        receivedUserInput.current = false\n        animationFrameRef.current = null\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    // Reset user input tracking on every render\n    if (receivedUserInput.current) {\n      receivedUserInput.current = false\n    }\n  })\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Editor, Element, Node, Range, Transforms, Path, Text } from 'slate'\nimport throttle from 'lodash/throttle'\nimport debounce from 'lodash/debounce'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport { DefaultPlaceholder, ReactEditor } from '../..'\nimport { ReadOnlyContext } from '../../hooks/use-read-only'\nimport { useSlate } from '../../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../../hooks/use-decorate'\nimport {\n  DOMElement,\n  isDOMElement,\n  isDOMNode,\n  getDefaultView,\n  getClipboardData,\n} from '../../utils/dom'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n  IS_COMPOSING,\n  IS_ON_COMPOSITION_END,\n  EDITOR_ON_COMPOSITION_TEXT,\n} from '../../utils/weak-maps'\nimport { normalizeTextInsertionRange } from './diff-text'\n\nimport { EditableProps, hasTarget } from '../editable'\nimport useChildren from '../../hooks/use-children'\nimport {\n  defaultDecorate,\n  hasEditableTarget,\n  isEventHandled,\n  isDOMEventHandled,\n  isTargetInsideNonReadonlyVoid,\n} from '../editable'\n\nimport { useAndroidInputManager } from './use-android-input-manager'\nimport { useContentKey } from '../../hooks/use-content-key'\n\n/**\n * Editable.\n */\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 20\n\nexport const AndroidEditable = (props: EditableProps): JSX.Element => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const inputManager = useAndroidInputManager(ref)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isComposing: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  const contentKey = useContentKey(editor)\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    try {\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = root.getSelection()\n\n      if (\n        state.isComposing ||\n        !domSelection ||\n        !ReactEditor.isFocused(editor)\n      ) {\n        return\n      }\n\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (hasDomSelection && hasDomSelectionInEditor && selection) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          suppressThrow: true,\n        })\n        if (slateRange && Range.equals(slateRange, selection)) {\n          return\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: false,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      const el = ReactEditor.toDOMNode(editor, editor)\n      state.isUpdatingSelection = true\n\n      const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        const leafEl = newDomRange.startContainer.parentElement!\n        leafEl.getBoundingClientRect = newDomRange.getBoundingClientRect.bind(\n          newDomRange\n        )\n        scrollIntoView(leafEl, {\n          scrollMode: 'if-needed',\n          boundary: el,\n        })\n        // @ts-ignore\n        delete leafEl.getBoundingClientRect\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      setTimeout(() => {\n        state.isUpdatingSelection = false\n      })\n    } catch {\n      // Failed to update selection, likely due to reconciliation error\n      state.isUpdatingSelection = false\n    }\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      try {\n        if (\n          !state.isComposing &&\n          !state.isUpdatingSelection &&\n          !inputManager.isReconciling.current\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            hasEditableTarget(editor, anchorNode) ||\n            isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            hasEditableTarget(editor, focusNode) ||\n            isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n            Transforms.select(editor, range)\n          } else {\n            Transforms.deselect(editor)\n          }\n        }\n      } catch {\n        // Failed to update selection, likely due to reconciliation error\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n\n        inputManager.onUserInput()\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  useIsomorphicLayoutEffect(() => {\n    const node = ref.current\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    node?.addEventListener('beforeinput', onDOMBeforeInput)\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    return () => node?.removeEventListener('beforeinput', onDOMBeforeInput)\n  }, [contentKey, propsOnDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          key={contentKey}\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          spellCheck={attributes.spellCheck}\n          autoCorrect={attributes.autoCorrect}\n          autoCapitalize={attributes.autoCapitalize}\n          data-slate-editor\n          data-slate-node=\"value\"\n          contentEditable={readOnly ? undefined : true}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'copy')\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'cut')\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onClick={useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onClick) &&\n                isDOMNode(event.target)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n\n                // At this time, the Slate document may be arbitrarily different,\n                // because onClick handlers can change the document before we get here.\n                // Therefore we must check that this path actually exists,\n                // and that it still refers to the same node.\n                if (Editor.hasPath(editor, path)) {\n                  const lookupNode = Node.get(editor, path)\n                  if (lookupNode === node) {\n                    const start = Editor.start(editor, path)\n                    const end = Editor.end(editor, path)\n\n                    const startVoid = Editor.void(editor, { at: start })\n                    const endVoid = Editor.void(editor, { at: end })\n\n                    if (\n                      startVoid &&\n                      endVoid &&\n                      Path.equals(startVoid[1], endVoid[1])\n                    ) {\n                      const range = Editor.range(editor, start)\n                      Transforms.select(editor, range)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onClick]\n          )}\n          onCompositionEnd={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionEnd)\n              ) {\n                scheduleOnDOMSelectionChange.flush()\n                setTimeout(() => {\n                  state.isComposing && setIsComposing(false)\n                  state.isComposing = false\n\n                  IS_COMPOSING.set(editor, false)\n                  IS_ON_COMPOSITION_END.set(editor, true)\n\n                  const insertedText =\n                    EDITOR_ON_COMPOSITION_TEXT.get(editor) || []\n\n                  // `insertedText` is set in `MutationObserver` constructor.\n                  // If open phone keyboard association function, `CompositionEvent` will be triggered.\n                  if (!insertedText.length) {\n                    return\n                  }\n\n                  EDITOR_ON_COMPOSITION_TEXT.set(editor, [])\n\n                  const { selection } = editor\n\n                  insertedText.forEach(insertion => {\n                    const text = insertion.text.insertText\n                    const at = normalizeTextInsertionRange(\n                      editor,\n                      selection,\n                      insertion\n                    )\n                    Transforms.setSelection(editor, at)\n                    Editor.insertText(editor, text)\n                  })\n                }, RESOLVE_DELAY)\n              }\n            },\n            [attributes.onCompositionEnd]\n          )}\n          onCompositionUpdate={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionUpdate)\n              ) {\n                !state.isComposing && setIsComposing(true)\n                state.isComposing = true\n                IS_COMPOSING.set(editor, true)\n              }\n            },\n            [attributes.onCompositionUpdate]\n          )}\n          onCompositionStart={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionStart)\n              ) {\n                !state.isComposing && setIsComposing(true)\n                state.isComposing = true\n                IS_COMPOSING.set(editor, true)\n              }\n            },\n            [attributes.onCompositionStart]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              // this will make application/x-slate-fragment exist when onPaste attributes is passed\n              event.clipboardData = getClipboardData(event.clipboardData)\n              // This unfortunately needs to be handled with paste events instead.\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste) &&\n                !readOnly\n              ) {\n                event.preventDefault()\n                ReactEditor.insertData(editor, event.clipboardData)\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          {useChildren({\n            decorations,\n            node: editor,\n            renderElement,\n            renderPlaceholder,\n            renderLeaf,\n            selection: editor.selection,\n          })}\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>((null as any) as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function getSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback((editor: Editor) => {\n    slateRef.editor = editor\n    eventListeners.forEach((listener: EditorChangeHandler) => listener(editor))\n  }, [])\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n","import React, { useMemo, useState, useCallback, useEffect, useRef } from 'react'\nimport { Editor, Node, Element, Descendant } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext } from '../hooks/use-slate'\nimport {\n  getSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { IS_REACT_VERSION_17_OR_ABOVE } from '../utils/environment'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const unmountRef = useRef(false)\n\n  const [context, setContext] = React.useState<[ReactEditor]>(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\n        `[Slate] value is invalid! Expected a list of elements` +\n          `but got: ${JSON.stringify(value)}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! you passed:` + `${JSON.stringify(editor)}`\n      )\n    }\n    editor.children = value\n    Object.assign(editor, rest)\n    return [editor]\n  })\n\n  const {\n    selectorContext,\n    onChange: handleSelectorChange,\n  } = getSelectorContext(editor)\n\n  const onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children)\n    }\n\n    setContext([editor])\n    handleSelectorChange(editor)\n  }, [onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n      unmountRef.current = true\n    }\n  }, [])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '..'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport { Editor, Node, Path, Operation, Transforms, Range } from 'slate'\n\nimport { ReactEditor } from './react-editor'\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  NODE_TO_KEY,\n  EDITOR_TO_USER_SELECTION,\n} from '../utils/weak-maps'\nimport {\n  isDOMText,\n  getPlainText,\n  getSlateFragmentAttribute,\n} from '../utils/dom'\nimport { findCurrentLineRange } from '../utils/lines'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends Editor>(editor: T) => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      const parentBlockEntry = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n        at: editor.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          editor,\n          parentBlockPath,\n          editor.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(editor, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData('application/x-slate-fragment') ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n","// Components\n// Environment-dependent Editable\nimport { Editable as DefaultEditable } from './components/editable'\nimport { AndroidEditable } from './components/android/android-editable'\nimport { IS_ANDROID } from './utils/environment'\n\nexport const Editable = IS_ANDROID ? AndroidEditable : DefaultEditable\nexport {\n  Editable as DefaultEditable,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  DefaultPlaceholder,\n} from './components/editable'\nexport { AndroidEditable } from './components/android/android-editable'\nexport { DefaultElement } from './components/element'\nexport { DefaultLeaf } from './components/leaf'\nexport { Slate } from './components/slate'\n\n// Hooks\nexport { useEditor } from './hooks/use-editor'\nexport { useSlateStatic } from './hooks/use-slate-static'\nexport { useFocused } from './hooks/use-focused'\nexport { useReadOnly } from './hooks/use-read-only'\nexport { useSelected } from './hooks/use-selected'\nexport { useSlate } from './hooks/use-slate'\nexport { useSlateSelector } from './hooks/use-slate-selector'\n\n// Plugin\nexport { ReactEditor } from './plugin/react-editor'\nexport { withReact } from './plugin/with-react'\n","export const TRIPLE_CLICK = 3\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;"],"names":["DialogContext","React","useDialogIsVisible","_a","useContext","visible","useSetDialogIsVisible","setVisible","children","_b","__read","useState","value","useMemo","Provider","module","exports","String","rtl","test","ltr","RTL","LTR","RegExp","Symbol","require","getRawTag","objectToString","symToStringTag","toStringTag","undefined","Object","trimmedEndIndex","reTrimStart","string","slice","replace","freeGlobal","global","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","isOwn","call","tag","unmasked","e","result","freeSelf","self","root","Function","reWhitespace","index","length","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush","type","baseGetTag","isObjectLike","Date","debounce","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","t","nodeType","n","clientHeight","scrollHeight","clientWidth","scrollWidth","r","getComputedStyle","overflowY","overflowX","ownerDocument","defaultView","frameElement","i","o","l","d","window","scrollMode","block","f","inline","h","boundary","u","skipOverflowHiddenElements","s","a","c","g","document","scrollingElement","documentElement","p","m","parentElement","getRootNode","host","push","body","w","visualViewport","width","innerWidth","v","height","innerHeight","W","scrollX","pageXOffset","H","scrollY","pageYOffset","b","getBoundingClientRect","y","E","M","top","V","right","x","bottom","I","left","C","R","T","k","B","D","O","X","Y","L","S","j","N","q","borderLeftWidth","z","borderTopWidth","A","borderRightWidth","F","borderBottomWidth","G","J","K","offsetWidth","P","offsetHeight","Q","U","Z","scrollLeft","$","scrollTop","el","isOptionsObject","keys","target","isTargetAttached","isConnected","contains","behavior","compute","computeOptions","getOptions","actions","canSmoothScroll","style","forEach","_ref","scroll","defaultBehavior","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","IS_REACT_VERSION_17_OR_ABOVE","split","IS_IOS","navigator","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_QQBROWSER","IS_UC_MOBILE","IS_WECHATBROWSER","CAN_USE_DOM","createElement","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","getTargetRanges","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","props","isLast","leaf","parent","text","editor","useSlateStatic","path","ReactEditor","findPath","parentPath","Path","isVoid","ZeroWidthString","Node","isInline","Editor","TextString","isTrailing","isLineBreak","ref","useRef","getTextContent","concat","textWithTrailing","current","textContent","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","IS_COMPOSING","IS_ON_COMPOSITION_END","EDITOR_TO_USER_SELECTION","EDITOR_ON_COMPOSITION_TEXT","EDITOR_TO_ON_CHANGE","NODE_TO_RESTORE_DOM","PLACEHOLDER_SYMBOL","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","assign","placeholderRef","placeholderEl","editorEl","querySelector","minHeight","placeholderProps","placeholder","attributes","position","pointerEvents","maxWidth","display","opacity","userSelect","textDecoration","contentEditable","MemoizedLeaf","prev","next","Text$1","equals","shallowCompare","obj1","obj2","every","isDecoratorRangeListEqual","list","another","range","rangeOwnProps","_excluded$3","otherOwnProps","_excluded2","Range","useContentKey","node","contentKeyRef","updateAnimationFrameRef","setForceRerenderCounter","set","requestAnimationFrame","state","delete","cancelAnimationFrame","Text","decorations","leaves","findKey","id","KEY_TO_ELEMENT","get","contentKey","MemoizedText","Element","element","renderElement","DefaultElement","selection","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","_text","texts","color","outline","content","Fragment","MemoizedElement","EditorContext","createContext","Error","SelectedContext","useSelected","isLeafBlock","Element$1","isElement","sel","intersection","ds","reduce","acc","dec","_loop","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","insertSoftBreak","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","event","Hotkeys","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSoftBreak","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","SlateContext","useSlate","context","DecorateContext","getDefaultView","isDOMElement","isDOMNode","isDOMSelection","anchorNode","Selection","isDOMText","getEditableChildAndIndex","direction","childNodes","child","triedForward","triedBackward","getAttribute","getEditableChild","getPlainText","domNode","nodeValue","childNode","Array","from","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","getData","fragment","match","Children","DefaultPlaceholder","_ref2","defaultDecorate","defaultScrollSelectionIntoView","domRange","isCollapsed","leafEl","startContainer","bind","scrollIntoView","hasTarget","hasDOMNode","hasEditableTarget","editable","isTargetInsideNonReadonlyVoid","slateNode","toSlateNode","isEventHandled","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","isDOMEventHandled","defaultPrevented","getDiffOffsets","start","getDiffStart","end","prevLength","nextLength","getDiffEnd","sliceText","offsets","getTextInsertion","isText","prevText","nextText","endsWith","textDiff","insertText","removeText","diffText","normalizeTextInsertionRange","insertionRange","anchor","offset","focus","nodes","at","characterBeforeAnchor","characterAfterAnchor","Key","constructor","isComposing","getWindow","isEditor","unshift","JSON","stringify","findDocumentOrShadowRoot","toDOMNode","Document","ShadowRoot","getSelection","isFocused","isReadOnly","blur","activeElement","preventScroll","deselect","domSelection","rangeCount","removeAllRanges","Transforms","targetEl","err","message","includes","closest","isContentEditable","insertData","data","insertFragmentData","insertTextData","setFragmentData","originEvent","toDOMPoint","point","domPoint","void","querySelectorAll","attr","toDOMRange","isBackward","domAnchor","domFocus","createRange","startNode","startOffset","endNode","endOffset","isStartAtZeroWidth","isEndAtZeroWidth","setStart","setEnd","domEl","hasAttribute","findEventRange","nativeEvent","clientX","clientY","rect","isPrev","edge","before","after","caretRangeFromPoint","caretPositionFromPoint","offsetNode","toSlateRange","exactMatch","suppressThrow","toSlatePoint","nearestNode","nearestOffset","normalizeDOMPoint","parentNode","textNode","_domNode$textContent","potentialVoidNode","voidNode","leafNode","contents","cloneContents","removeChild","anchorOffset","focusNode","focusOffset","shadowRoot","endContainer","collapsed","isExpanded","isForward","mode","unhangRange","voids","hasRange","hasPath","AndroidInputManager","restoreDOM","mutations","reconcileMutations","console","error","mutationData","addedNodes","removedNodes","insertedText","characterDataMutations","mutation","addedNode","removedNode","textInsertion","some","gatherMutationData","isReplaceExpandedSelection","_ref4","_ref5","combineInsertedText","replaceExpandedSelection","parentDOMNode","HTMLElement","insertBreak","isRemoveLeafNodes","_","_ref7","removeLeafNodes","isDeletion","_ref3","isTextInsertion","_ref6","insertion","setSelection","move","deleteFragment","useMutationObserver","callback","mutationObserver","MutationObserver","disconnect","observe","MUTATION_OBSERVER_CONFIG$1","childList","characterData","subtree","findClosestKnowSlateNode","_domEl","useRestoreDom","receivedUserInput","mutatedNodes","Set","useCallback","add","clear","restore","mutated","values","nodesToRestore","filter","isParent","_NODE_TO_RESTORE_DOM$","MUTATION_OBSERVER_CONFIG","characterDataOldValue","useAndroidInputManager","onUserInput","animationFrameRef","useTrackUserInput","restoreDom","inputManager","timeoutId","isReconciling","FocusedContext","useFocused","SlateSelectorContext","Slate","onChange","rest","_excluded","unmountRef","setContext","isNodeList","selectorContext","handleSelectorChange","eventListeners","slateRef","listener","getSlate","addEventListener","splice","getSelectorContext","onContextChange","setIsFocused","fn","removeEventListener","doRectsIntersect","compareRect","middle","areRangesSameLine","range1","range2","rect1","rect2","withReact","unit","parentBlockEntry","above","isBlock","parentBlockPath","parentElementRange","currentLineRange","findCurrentLineRange","parentRange","parentRangeBoundary","positions","floor","op","matches","getMatches","_EDITOR_TO_USER_SELEC","unref","prevPath","previous","commonPath","common","newPath","edges","startVoid","endVoid","attach","trim","cloneRange","setEndAfter","zw","isNewline","span","whiteSpace","appendChild","getFragment","encoded","btoa","encodeURIComponent","setAttribute","setData","div","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","line","splitNodes","always","ReactDOM","levels","Editable","autoFocus","decorate","onDOMBeforeInput","propsOnDOMBeforeInput","as","Component","_excluded$1","setIsComposing","isUpdatingSelection","latestElement","hasDomSelection","editorElement","hasDomSelectionInEditor","slateRange","newDomRange","setBaseAndExtent","_unused","onDOMSelectionChange","throttle","anchorNodeSelectable","focusNodeSelectable","select","_unused2","scheduleOnDOMSelectionChange","role","spellCheck","autoCorrect","autoCapitalize","suppressContentEditableWarning","_objectSpread","wordWrap","onCopy","preventDefault","clipboardData","onCut","onFocus","onBlur","relatedTarget","onClick","_start","onCompositionEnd","onCompositionUpdate","onCompositionStart","onPaste","DataTransfer","types","getClipboardData","scrollSelectionIntoView","_excluded$2","deferredOperations","hasInsertPrefixInCompositon","isDraggingInternally","inputType","native","_node$parentElement","marks","_lastText$textContent","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","startsWith","targetRange","selectionRef","rangeRef","_selection","name","toRestore","flatMap","zindex","_objectSpread$1","onBeforeInput","onInput","detail","blockPath","_block$","_range","leafPath","currentTextNode","withoutNormalizing","distance","reverse","inlinePath","isEnd","insertNodes","onDragOver","onDragStart","onDrop","draggedRange","onDragEnd","onKeyDown","isRTL","maybeHistoryEditor","_maybeHistoryEditor","collapse","currentNode","isPlainTextOnlyPaste","IS_MAC","platform","MODIFIERS","alt","control","meta","shift","ALIASES","break","cmd","command","ctl","ctrl","del","down","esc","ins","mod","opt","option","return","space","spacebar","up","win","CODES","backspace","tab","enter","pause","capslock","escape","pageup","pagedown","home","arrowleft","arrowup","arrowright","arrowdown","insert","numlock","scrolllock","isHotkey","hotkey","isArray","array","map","parseHotkey","check","object","compareHotkey","byKey","ret","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","optional","toKeyName","modifier","which","toKeyCode","expected","actual","toLowerCase","toUpperCase","charCodeAt"],"sourceRoot":""}