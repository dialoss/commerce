/* tslint:disable */
/* eslint-disable */
/**
 * Mymount
 * Mymount
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Comment } from './Comment';
import {
    CommentFromJSON,
    CommentFromJSONTyped,
    CommentToJSON,
} from './Comment';

/**
 * 
 * @export
 * @interface PaginatedCommentList
 */
export interface PaginatedCommentList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedCommentList
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedCommentList
     */
    next?: string;
    /**
     * 
     * @type {string}
     * @memberof PaginatedCommentList
     */
    previous?: string;
    /**
     * 
     * @type {Array<Comment>}
     * @memberof PaginatedCommentList
     */
    results: Array<Comment>;
}

/**
 * Check if a given object implements the PaginatedCommentList interface.
 */
export function instanceOfPaginatedCommentList(value: object): boolean {
    if (!('count' in value)) return false;
    if (!('results' in value)) return false;
    return true;
}

export function PaginatedCommentListFromJSON(json: any): PaginatedCommentList {
    return PaginatedCommentListFromJSONTyped(json, false);
}

export function PaginatedCommentListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedCommentList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': ((json['results'] as Array<any>).map(CommentFromJSON)),
    };
}

export function PaginatedCommentListToJSON(value?: PaginatedCommentList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': ((value['results'] as Array<any>).map(CommentToJSON)),
    };
}

