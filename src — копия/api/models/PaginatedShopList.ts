/* tslint:disable */
/* eslint-disable */
/**
 * Mymount
 * Mymount
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Shop } from './Shop';
import {
    ShopFromJSON,
    ShopFromJSONTyped,
    ShopToJSON,
} from './Shop';

/**
 * 
 * @export
 * @interface PaginatedShopList
 */
export interface PaginatedShopList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedShopList
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedShopList
     */
    next?: string;
    /**
     * 
     * @type {string}
     * @memberof PaginatedShopList
     */
    previous?: string;
    /**
     * 
     * @type {Array<Shop>}
     * @memberof PaginatedShopList
     */
    results: Array<Shop>;
}

/**
 * Check if a given object implements the PaginatedShopList interface.
 */
export function instanceOfPaginatedShopList(value: object): boolean {
    if (!('count' in value)) return false;
    if (!('results' in value)) return false;
    return true;
}

export function PaginatedShopListFromJSON(json: any): PaginatedShopList {
    return PaginatedShopListFromJSONTyped(json, false);
}

export function PaginatedShopListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedShopList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': ((json['results'] as Array<any>).map(ShopFromJSON)),
    };
}

export function PaginatedShopListToJSON(value?: PaginatedShopList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': ((value['results'] as Array<any>).map(ShopToJSON)),
    };
}

